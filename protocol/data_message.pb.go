// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: data_message.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListingAvailabilty int32

const (
	ListingAvailabilty_IN_STOCK     ListingAvailabilty = 0
	ListingAvailabilty_ALMOST_GONE  ListingAvailabilty = 1 // LAST ITEMS
	ListingAvailabilty_OUT_OF_STOCK ListingAvailabilty = 2
)

// Enum value maps for ListingAvailabilty.
var (
	ListingAvailabilty_name = map[int32]string{
		0: "IN_STOCK",
		1: "ALMOST_GONE",
		2: "OUT_OF_STOCK",
	}
	ListingAvailabilty_value = map[string]int32{
		"IN_STOCK":     0,
		"ALMOST_GONE":  1,
		"OUT_OF_STOCK": 2,
	}
)

func (x ListingAvailabilty) Enum() *ListingAvailabilty {
	p := new(ListingAvailabilty)
	*p = x
	return p
}

func (x ListingAvailabilty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListingAvailabilty) Descriptor() protoreflect.EnumDescriptor {
	return file_data_message_proto_enumTypes[0].Descriptor()
}

func (ListingAvailabilty) Type() protoreflect.EnumType {
	return &file_data_message_proto_enumTypes[0]
}

func (x ListingAvailabilty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListingAvailabilty.Descriptor instead.
func (ListingAvailabilty) EnumDescriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{0}
}

// That message is going to be used as the container for other messages,
// by using protobuf framework and helper methods the type of message_type can be determined
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageType:
	//
	//	*Message_Chat
	//	*Message_Listings
	//	*Message_RoomState
	//	*Message_ChatHistoryRequest
	//	*Message_ChatHistoryResponse
	//	*Message_Statistics
	//	*Message_Reaction
	MessageType isMessage_MessageType `protobuf_oneof:"message_type"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{0}
}

func (m *Message) GetMessageType() isMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (x *Message) GetChat() *Chat {
	if x, ok := x.GetMessageType().(*Message_Chat); ok {
		return x.Chat
	}
	return nil
}

func (x *Message) GetListings() *Listings {
	if x, ok := x.GetMessageType().(*Message_Listings); ok {
		return x.Listings
	}
	return nil
}

func (x *Message) GetRoomState() *RoomState {
	if x, ok := x.GetMessageType().(*Message_RoomState); ok {
		return x.RoomState
	}
	return nil
}

func (x *Message) GetChatHistoryRequest() *ChatHistoryRequest {
	if x, ok := x.GetMessageType().(*Message_ChatHistoryRequest); ok {
		return x.ChatHistoryRequest
	}
	return nil
}

func (x *Message) GetChatHistoryResponse() *ChatHistoryResponse {
	if x, ok := x.GetMessageType().(*Message_ChatHistoryResponse); ok {
		return x.ChatHistoryResponse
	}
	return nil
}

func (x *Message) GetStatistics() *Statistics {
	if x, ok := x.GetMessageType().(*Message_Statistics); ok {
		return x.Statistics
	}
	return nil
}

func (x *Message) GetReaction() *Reaction {
	if x, ok := x.GetMessageType().(*Message_Reaction); ok {
		return x.Reaction
	}
	return nil
}

type isMessage_MessageType interface {
	isMessage_MessageType()
}

type Message_Chat struct {
	Chat *Chat `protobuf:"bytes,1,opt,name=chat,proto3,oneof"`
}

type Message_Listings struct {
	Listings *Listings `protobuf:"bytes,2,opt,name=listings,proto3,oneof"`
}

type Message_RoomState struct {
	RoomState *RoomState `protobuf:"bytes,3,opt,name=room_state,json=roomState,proto3,oneof"`
}

type Message_ChatHistoryRequest struct {
	ChatHistoryRequest *ChatHistoryRequest `protobuf:"bytes,4,opt,name=chat_history_request,json=chatHistoryRequest,proto3,oneof"`
}

type Message_ChatHistoryResponse struct {
	ChatHistoryResponse *ChatHistoryResponse `protobuf:"bytes,5,opt,name=chat_history_response,json=chatHistoryResponse,proto3,oneof"`
}

type Message_Statistics struct {
	Statistics *Statistics `protobuf:"bytes,6,opt,name=statistics,proto3,oneof"`
}

type Message_Reaction struct {
	Reaction *Reaction `protobuf:"bytes,7,opt,name=reaction,proto3,oneof"`
}

func (*Message_Chat) isMessage_MessageType() {}

func (*Message_Listings) isMessage_MessageType() {}

func (*Message_RoomState) isMessage_MessageType() {}

func (*Message_ChatHistoryRequest) isMessage_MessageType() {}

func (*Message_ChatHistoryResponse) isMessage_MessageType() {}

func (*Message_Statistics) isMessage_MessageType() {}

func (*Message_Reaction) isMessage_MessageType() {}

// Shared messages
// All messages are going to be in UNICODE format
type Chat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` //str + emoji(like: \uD83D)
	DateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3,oneof" json:"date_time,omitempty"`
	Sender   *string                `protobuf:"bytes,3,opt,name=sender,proto3,oneof" json:"sender,omitempty"`
}

func (x *Chat) Reset() {
	*x = Chat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat) ProtoMessage() {}

func (x *Chat) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat.ProtoReflect.Descriptor instead.
func (*Chat) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{1}
}

func (x *Chat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Chat) GetDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *Chat) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

// This message is responsible for global user reaction in the event
type Reaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emoji string `protobuf:"bytes,1,opt,name=emoji,proto3" json:"emoji,omitempty"` // emoji(like: \uD83D), Unicode 15.0, includes over 3,600 emoji. https://emojipedia.org/
}

func (x *Reaction) Reset() {
	*x = Reaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reaction) ProtoMessage() {}

func (x *Reaction) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reaction.ProtoReflect.Descriptor instead.
func (*Reaction) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{2}
}

func (x *Reaction) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

// Current room state, that message is going to be sent by bot to participants on "Participant joined" event
type RoomState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastChatHistory *ChatHistory `protobuf:"bytes,1,opt,name=last_chat_history,json=lastChatHistory,proto3" json:"last_chat_history,omitempty"`
	Statistics      *Statistics  `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *RoomState) Reset() {
	*x = RoomState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomState) ProtoMessage() {}

func (x *RoomState) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomState.ProtoReflect.Descriptor instead.
func (*RoomState) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{3}
}

func (x *RoomState) GetLastChatHistory() *ChatHistory {
	if x != nil {
		return x.LastChatHistory
	}
	return nil
}

func (x *RoomState) GetStatistics() *Statistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

// Host messages
// Add Listings for Listings update specifically instead of super set LiveMessage/ChatMessage sth (the Any Type).
// Room/event name(id) will not be included in data bytes as it's included in (livekit) sendData API directly.
// repeated will promise the (different) listing order per event.
// Once super set is required, like LiveMessage { optional Listings listings } is good for deciding this message is used
// for updating listing or not since optional keyword will gen has_field method to know the field are set or not.
type Listings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listings []*Listing `protobuf:"bytes,1,rep,name=listings,proto3" json:"listings,omitempty"`
}

func (x *Listings) Reset() {
	*x = Listings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listings) ProtoMessage() {}

func (x *Listings) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listings.ProtoReflect.Descriptor instead.
func (*Listings) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{4}
}

func (x *Listings) GetListings() []*Listing {
	if x != nil {
		return x.Listings
	}
	return nil
}

type Listing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListingId           int64               `protobuf:"varint,1,opt,name=listing_id,json=listingId,proto3" json:"listing_id,omitempty"`
	IsActive            *bool               `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3,oneof" json:"is_active,omitempty"` // show=true, hidden=false, unset will be decided by optional which gen has_field in PB3.
	ListingAvailability *ListingAvailabilty `protobuf:"varint,3,opt,name=listing_availability,json=listingAvailability,proto3,enum=ListingAvailabilty,oneof" json:"listing_availability,omitempty"`
}

func (x *Listing) Reset() {
	*x = Listing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing) ProtoMessage() {}

func (x *Listing) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing.ProtoReflect.Descriptor instead.
func (*Listing) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{5}
}

func (x *Listing) GetListingId() int64 {
	if x != nil {
		return x.ListingId
	}
	return 0
}

func (x *Listing) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *Listing) GetListingAvailability() ListingAvailabilty {
	if x != nil && x.ListingAvailability != nil {
		return *x.ListingAvailability
	}
	return ListingAvailabilty_IN_STOCK
}

// Bot messages
// The message for storing chat messages
type ChatHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatMessages []*Chat `protobuf:"bytes,1,rep,name=chat_messages,json=chatMessages,proto3" json:"chat_messages,omitempty"`
	Offset       int32   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // The current cursor position
}

func (x *ChatHistory) Reset() {
	*x = ChatHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistory) ProtoMessage() {}

func (x *ChatHistory) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistory.ProtoReflect.Descriptor instead.
func (*ChatHistory) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{6}
}

func (x *ChatHistory) GetChatMessages() []*Chat {
	if x != nil {
		return x.ChatMessages
	}
	return nil
}

func (x *ChatHistory) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// It is used for storing statistics that is calculated by bot
type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueViewerCount *int32 `protobuf:"varint,1,opt,name=unique_viewer_count,json=uniqueViewerCount,proto3,oneof" json:"unique_viewer_count,omitempty"` // The total unique numbers of users that are joined to the stream
	LikesCount        *int32 `protobuf:"varint,2,opt,name=likes_count,json=likesCount,proto3,oneof" json:"likes_count,omitempty"`                        // Total likes count for the stream
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{7}
}

func (x *Statistics) GetUniqueViewerCount() int32 {
	if x != nil && x.UniqueViewerCount != nil {
		return *x.UniqueViewerCount
	}
	return 0
}

func (x *Statistics) GetLikesCount() int32 {
	if x != nil && x.LikesCount != nil {
		return *x.LikesCount
	}
	return 0
}

// The request to the bot to get chat history
type ChatHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"` // Is used as cursor(current position) from where to start getting data
	Limit  int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // That request supports two direction of getting history, forward, backward. To use forward way use positive numbers, to use backward way use negative numbers
}

func (x *ChatHistoryRequest) Reset() {
	*x = ChatHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistoryRequest) ProtoMessage() {}

func (x *ChatHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistoryRequest.ProtoReflect.Descriptor instead.
func (*ChatHistoryRequest) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{8}
}

func (x *ChatHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ChatHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// The response from the bot to get chat history
type ChatHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatHistory *ChatHistory `protobuf:"bytes,1,opt,name=chat_history,json=chatHistory,proto3" json:"chat_history,omitempty"`
}

func (x *ChatHistoryResponse) Reset() {
	*x = ChatHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistoryResponse) ProtoMessage() {}

func (x *ChatHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistoryResponse.ProtoReflect.Descriptor instead.
func (*ChatHistoryResponse) Descriptor() ([]byte, []int) {
	return file_data_message_proto_rawDescGZIP(), []int{9}
}

func (x *ChatHistoryResponse) GetChatHistory() *ChatHistory {
	if x != nil {
		return x.ChatHistory
	}
	return nil
}

var File_data_message_proto protoreflect.FileDescriptor

var file_data_message_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x00, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x27,
	0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x08, 0x6c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x68, 0x61, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a,
	0x15, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x63, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x94, 0x01, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x20, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x22, 0x72, 0x0a, 0x09, 0x52, 0x6f,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x30,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0xbe, 0x01, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a,
	0x14, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x74, 0x79,
	0x48, 0x01, 0x52, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69,
	0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x22, 0x51, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x2a, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x0c,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x33, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x11, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6c, 0x69, 0x6b, 0x65,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x16,
	0x0a, 0x14, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x46, 0x0a, 0x13, 0x43, 0x68,
	0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x2a, 0x45, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x74, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x5f, 0x53,
	0x54, 0x4f, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4c, 0x4d, 0x4f, 0x53, 0x54,
	0x5f, 0x47, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x55, 0x54, 0x5f, 0x4f,
	0x46, 0x5f, 0x53, 0x54, 0x4f, 0x43, 0x4b, 0x10, 0x02, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x79, 0x6b, 0x6f, 0x6c, 0x61, 0x53, 0x6f,
	0x6c, 0x79, 0x61, 0x6e, 0x6b, 0x6f, 0x2f, 0x4c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_message_proto_rawDescOnce sync.Once
	file_data_message_proto_rawDescData = file_data_message_proto_rawDesc
)

func file_data_message_proto_rawDescGZIP() []byte {
	file_data_message_proto_rawDescOnce.Do(func() {
		file_data_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_message_proto_rawDescData)
	})
	return file_data_message_proto_rawDescData
}

var file_data_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_data_message_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_data_message_proto_goTypes = []interface{}{
	(ListingAvailabilty)(0),       // 0: ListingAvailabilty
	(*Message)(nil),               // 1: Message
	(*Chat)(nil),                  // 2: Chat
	(*Reaction)(nil),              // 3: Reaction
	(*RoomState)(nil),             // 4: RoomState
	(*Listings)(nil),              // 5: Listings
	(*Listing)(nil),               // 6: Listing
	(*ChatHistory)(nil),           // 7: ChatHistory
	(*Statistics)(nil),            // 8: Statistics
	(*ChatHistoryRequest)(nil),    // 9: ChatHistoryRequest
	(*ChatHistoryResponse)(nil),   // 10: ChatHistoryResponse
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_data_message_proto_depIdxs = []int32{
	2,  // 0: Message.chat:type_name -> Chat
	5,  // 1: Message.listings:type_name -> Listings
	4,  // 2: Message.room_state:type_name -> RoomState
	9,  // 3: Message.chat_history_request:type_name -> ChatHistoryRequest
	10, // 4: Message.chat_history_response:type_name -> ChatHistoryResponse
	8,  // 5: Message.statistics:type_name -> Statistics
	3,  // 6: Message.reaction:type_name -> Reaction
	11, // 7: Chat.date_time:type_name -> google.protobuf.Timestamp
	7,  // 8: RoomState.last_chat_history:type_name -> ChatHistory
	8,  // 9: RoomState.statistics:type_name -> Statistics
	6,  // 10: Listings.listings:type_name -> Listing
	0,  // 11: Listing.listing_availability:type_name -> ListingAvailabilty
	2,  // 12: ChatHistory.chat_messages:type_name -> Chat
	7,  // 13: ChatHistoryResponse.chat_history:type_name -> ChatHistory
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_data_message_proto_init() }
func file_data_message_proto_init() {
	if File_data_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_data_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Message_Chat)(nil),
		(*Message_Listings)(nil),
		(*Message_RoomState)(nil),
		(*Message_ChatHistoryRequest)(nil),
		(*Message_ChatHistoryResponse)(nil),
		(*Message_Statistics)(nil),
		(*Message_Reaction)(nil),
	}
	file_data_message_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_data_message_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_data_message_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_message_proto_goTypes,
		DependencyIndexes: file_data_message_proto_depIdxs,
		EnumInfos:         file_data_message_proto_enumTypes,
		MessageInfos:      file_data_message_proto_msgTypes,
	}.Build()
	File_data_message_proto = out.File
	file_data_message_proto_rawDesc = nil
	file_data_message_proto_goTypes = nil
	file_data_message_proto_depIdxs = nil
}
